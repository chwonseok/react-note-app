{"version":3,"sources":["components/NewNote.js","components/Note.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["AddNote","addNote","useState","text","setText","textLimit","setTextLimit","className","onChange","e","textValue","target","value","length","cols","rows","placeholder","onClick","trim","Note","note","removeNote","date","id","NotesList","notes","NewNote","map","Search","searchNote","type","Header","changeDark","resetNotes","defaultNote","uniqid","App","setNotes","searchText","setSearchText","dark","setDark","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","clear","filter","toLowerCase","includes","Date","toLocaleDateString","newNote","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08eb0e69.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst TEXT_LIMIT = 200;\n\nconst AddNote = ({ addNote }) => {\n  const [text, setText] = useState('');\n  const [textLimit, setTextLimit] = useState(TEXT_LIMIT);\n\n  const onChange = (e) => {\n    const textValue = e.target.value;\n    if (textLimit === 0) return; // it blocks user to type more when textLimit reaches 0\n\n    setText(textValue);\n    setTextLimit(TEXT_LIMIT - textValue.length);\n  };\n\n  const onClick = () => {\n    if (text.trim().length === 0) return; // prevent from submitting with empty text\n    addNote(text);\n\n    // Reset textarea and remaining number\n    setText('');\n    setTextLimit(TEXT_LIMIT);\n  };\n\n  return (\n    <div className=\"note new\">\n      <textarea\n        onChange={onChange}\n        value={text}\n        cols=\"10\"\n        rows=\"10\"\n        placeholder=\"Type for new note...\"\n      ></textarea>\n      <div className=\"note-footer\">\n        <span>{textLimit} Remaining</span>\n        <button onClick={onClick} className=\"btn\">\n          save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNote;\n","import { MdDeleteForever } from 'react-icons/md';\n\nconst Note = ({ note, removeNote }) => {\n  return (\n    <div className=\"note\">\n      <p>{note.text}</p>\n      <div className=\"note-footer\">\n        <span>{note.date}</span>\n        <MdDeleteForever\n          onClick={() => removeNote(note.id)}\n          className=\"delete-btn\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","import NewNote from './NewNote';\nimport Note from './Note';\n\nconst NotesList = ({ notes, addNote, removeNote }) => {\n  return (\n    <div className=\"notes-list\">\n      <NewNote addNote={addNote} />\n      {notes.map((note) => (\n        <Note key={note.id} note={note} removeNote={removeNote} />\n      ))}\n    </div>\n  );\n};\n\nexport default NotesList;\n","import { MdSearch } from 'react-icons/md';\n\nconst Search = ({ searchNote }) => {\n  const onChange = (e) => {\n    const textValue = e.target.value;\n    searchNote(textValue);\n  };\n\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icon\" />\n      <input onChange={onChange} type=\"text\" placeholder=\"type to search...\" />\n    </div>\n  );\n};\n\nexport default Search;\n","const Header = ({ changeDark, resetNotes }) => {\n  return (\n    <div className=\"header\">\n      <h1>Notes.</h1>\n      <div className=\"header-btns\">\n        <button onClick={() => changeDark()} className=\"btn\">\n          Dark Mode\n        </button>\n        <button\n          onClick={() => {\n            resetNotes();\n          }}\n          className=\"btn reset\"\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from 'react';\nimport NotesList from './components/NotesList';\nimport uniqid from 'uniqid';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nconst defaultNote = [\n  {\n    id: uniqid(),\n    text: 'Default note\\n\\n\\nthis is to show you how the note looks like when you add\\nyou can delete this default note to start to use this App ðŸ˜‰\\nHave fun!',\n    date: 'by chwonseok',\n  },\n];\n\nconst App = () => {\n  const [notes, setNotes] = useState(defaultNote);\n  const [searchText, setSearchText] = useState('');\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes-data'));\n\n    if (!savedNotes) return; // To check if there is savedNotes\n\n    setNotes(savedNotes);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('notes-data', JSON.stringify(notes));\n  }, [notes]);\n\n  const resetNotes = () => {\n    localStorage.clear();\n    setNotes(defaultNote);\n  };\n\n  const changeDark = () => {\n    setDark(!dark);\n  };\n\n  const removeNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const addNote = (note) => {\n    const date = new Date().toLocaleDateString();\n\n    const newNote = {\n      id: uniqid(),\n      text: note,\n      date: date,\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  return (\n    <div className={`${dark ? 'app dark' : 'app'}`}>\n      <div className=\"container\">\n        <Header changeDark={changeDark} resetNotes={resetNotes} />\n        <Search searchNote={setSearchText} />\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          addNote={addNote}\n          removeNote={removeNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}